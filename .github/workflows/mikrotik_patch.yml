name: Patch Mikrotik RouterOS
on:
  # push:
  #   branches: [ "main" ]
  schedule:
    - cron: "0 0 10 * *"
  workflow_dispatch:
    inputs:
      version:
        description: 'RouterOS version, e.g.: 7.15.3, blank for latest'
        type: string
        default: ''
permissions:
  contents: write

jobs:
  Create_SquashFS:
    runs-on: ubuntu-latest
    env:
      TZ: 'Asia/Shanghai'
    steps:
      - name: Create squashfs for option npk        
        run: |
          cd $GITHUB_WORKSPACE
          sudo wget -O busybox -nv https://busybox.net/downloads/binaries/1.21.1/busybox-armv7l
          sudo chmod +x busybox
          sudo mkdir -p ./option-root/bin/
          sudo mv busybox ./option-root/bin/
          sudo cp ./option-root/bin/busybox ./option-root/bin/bash
          sudo mksquashfs option-root option.sfs -quiet -comp xz -no-xattrs -b 256k
          sudo rm -rf option-root
       
      - name: Create squashfs for python3 npk        
        run: |
          sudo wget -O cpython-3.11.9.tar.gz -nv https://github.com/indygreg/python-build-standalone/releases/download/20240415/cpython-3.11.9+20240415-x86_64-unknown-linux-musl-install_only.tar.gz
          sudo tar -xf cpython-3.11.9.tar.gz
          sudo rm -f cpython-3.11.9.tar.gz
          sudo rm -rf ./python/include
          sudo rm -rf ./python/share
          sudo mksquashfs python python3.sfs -quiet -comp xz -no-xattrs -b 256k
          sudo rm -rf python

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          retention-days: 1
          name: squashfs
          path: ./*.sfs

  Patch_Latest_RouterOS:
    runs-on: ubuntu-latest
    needs: Create_SquashFS
    strategy:
      matrix:
        channel: [stable]
    env:
      TZ: 'Asia/Shanghai'
      LATEST_VERSION_URL: 'https://upgrade.mikrotik.com/routeros/NEWESTa7.'
      LATEST_VERSION: ""
      #CUSTOM_LICENSE_PRIVATE_KEY: ${{ secrets.CUSTOM_LICENSE_PRIVATE_KEY }}
      #CUSTOM_LICENSE_PUBLIC_KEY: ${{ secrets.CUSTOM_LICENSE_PUBLIC_KEY }}
      #CUSTOM_NPK_SIGN_PRIVATE_KEY: ${{ secrets.CUSTOM_NPK_SIGN_PRIVATE_KEY }}
      #CUSTOM_NPK_SIGN_PUBLIC_KEY: ${{ secrets.CUSTOM_NPK_SIGN_PUBLIC_KEY }}
      #MIKRO_LICENSE_PUBLIC_KEY: ${{ secrets.MIKRO_LICENSE_PUBLIC_KEY }}
      #MIKRO_NPK_SIGN_PUBLIC_LKEY: ${{ secrets.MIKRO_NPK_SIGN_PUBLIC_LKEY }}
      CUSTOM_NPK_SIGN_PRIVATE_KEY: 9B9C5D1DB2238DF015ECEF1D137C5DB249DC4128C6D0E3BAA0508FFAA63A8665
      CUSTOM_NPK_SIGN_PUBLIC_KEY: 7D5C1B67162845017ADD2E7FD9DB003C0E056E0A3C5B12DE2E2E36A745330C1A
      CUSTOM_LICENSE_PRIVATE_KEY: 2539974942E50662A16461D91CFB822A6D0F38D21A0F2DE63D4EC176C04B4002
      CUSTOM_LICENSE_PUBLIC_KEY: BF3C625C28B572FDF486D1C87CB0B44FA1A63B5E2AD44F0FAFA23558DC86782D
      MIKRO_LICENSE_PUBLIC_KEY: 8E1067E4305FCDC0CFBF95C10F96E5DFE8C49AEF486BD1A4E2E96C27F01E3E32
      MIKRO_NPK_SIGN_PUBLIC_LKEY: C293CED638A2A33C681FC8DE98EE26C54EADC5390C2DFCE197D35C83C416CF59
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
        
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11' 

    - name: Download Artifact
      uses: actions/download-artifact@v4
      with:
        name: squashfs

    - name: Get latest routeros version  
      run: |
        echo $(uname -a)
        if [ "${{ inputs.version }}" == "" ]; then
          # LATEST_VERSION=$(wget -nv -O - ${{ env.LATEST_VERSION_URL }}${{ matrix.channel }} | cut -d ' ' -f1)
          LATEST_VERSION=7.15.3
        else
          LATEST_VERSION=${{ inputs.version }}
        fi
        echo Latest Version:$LATEST_VERSION
        echo "LATEST_VERSION=${LATEST_VERSION}" >> $GITHUB_ENV

    - name: Get netinstall-${{ env.LATEST_VERSION }}.zip
      run: |
        sudo wget -nv -O netinstall-$LATEST_VERSION.zip https://download.mikrotik.com/routeros/$LATEST_VERSION/netinstall-$LATEST_VERSION.zip
        sudo unzip netinstall-$LATEST_VERSION.zip
        sudo rm netinstall-$LATEST_VERSION.zip

    - name: Patch netinstall.exe
      run: |
        #sudo -E python3 patch.py netinstall netinstall.exe
        sudo zip netinstall-$LATEST_VERSION.zip ./netinstall.exe

    - name: Get and Patch routeros-${{ env.LATEST_VERSION }}-arm.npk
      run: |
        sudo wget -nv -O routeros-$LATEST_VERSION-arm.npk https://download.mikrotik.com/routeros/$LATEST_VERSION/routeros-$LATEST_VERSION-arm.npk
        sudo wget -nv -O routeros-$LATEST_VERSION-mmips.npk https://download.mikrotik.com/routeros/$LATEST_VERSION/routeros-$LATEST_VERSION-mmips.npk
        sudo wget -nv -O wireless-$LATEST_VERSION-arm.npk https://download.mikrotik.com/routeros/$LATEST_VERSION/wireless-$LATEST_VERSION-arm.npk
        sudo wget -nv -O wireless-$LATEST_VERSION-mmips.npk https://download.mikrotik.com/routeros/$LATEST_VERSION/wireless-$LATEST_VERSION-mmips.npk
        sudo wget -nv -O gps-$LATEST_VERSION-arm.npk https://download.mikrotik.com/routeros/$LATEST_VERSION/gps-$LATEST_VERSION-arm.npk
        sudo -E python3 patch.py npk routeros-$LATEST_VERSION-arm.npk
        sudo -E python3 npk.py sign routeros-$LATEST_VERSION-arm.npk routeros-$LATEST_VERSION-arm.npk
        sudo -E python3 patch.py npk routeros-$LATEST_VERSION-mmips.npk
        sudo -E python3 npk.py sign routeros-$LATEST_VERSION-mmips.npk routeros-$LATEST_VERSION-mmips.npk
        sudo -E python3 patch.py npk wireless-$LATEST_VERSION-arm.npk
        sudo -E python3 npk.py sign wireless-$LATEST_VERSION-arm.npk wireless-$LATEST_VERSION-arm.npk
        sudo -E python3 patch.py npk wireless-$LATEST_VERSION-mmips.npk
        sudo -E python3 npk.py sign wireless-$LATEST_VERSION-mmips.npk wireless-$LATEST_VERSION-mmips.npk
        sudo -E python3 npk.py create gps-$LATEST_VERSION-arm.npk ./option-$LATEST_VERSION.npk option ./option.sfs -desc="busybox and ash"
        sudo -E python3 npk.py create gps-$LATEST_VERSION-arm.npk ./python3-$LATEST_VERSION.npk python3 ./python3.sfs -desc="python 3.11.9"

    - name: Create Release tag ${{ env.LATEST_VERSION }}
      uses: softprops/action-gh-release@v2
      with:
        name: "MikroTik ${{ env.LATEST_VERSION }}"
        body: "MikroTik ${{ env.LATEST_VERSION }}"
        tag_name: ${{ env.LATEST_VERSION }}
        make_latest:  ${{ matrix.channel == 'stable' }}
        prerelease:  ${{ matrix.channel == 'testing' }}
        files: |
          routeros-${{ env.LATEST_VERSION }}-arm.npk
          routeros-${{ env.LATEST_VERSION }}-mmips.npk
          option-${{ env.LATEST_VERSION }}.npk
          wireless-${{ env.LATEST_VERSION }}-arm.npk
          wireless-${{ env.LATEST_VERSION }}-mmips.npk




